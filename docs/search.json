[
  {
    "objectID": "Modeling.html",
    "href": "Modeling.html",
    "title": "Modeling",
    "section": "",
    "text": "Quarto enables you to weave together content and executable code into a finished document. To learn more about Quarto see https://quarto.org."
  },
  {
    "objectID": "Modeling.html#quarto",
    "href": "Modeling.html#quarto",
    "title": "Modeling",
    "section": "",
    "text": "Quarto enables you to weave together content and executable code into a finished document. To learn more about Quarto see https://quarto.org."
  },
  {
    "objectID": "Modeling.html#running-code",
    "href": "Modeling.html#running-code",
    "title": "Modeling",
    "section": "Running Code",
    "text": "Running Code\nWhen you click the Render button a document will be generated that includes both content and the output of embedded code. You can embed code like this:\n\n1 + 1\n\n[1] 2\n\n\nYou can add options to executable code like this\n\n\n[1] 4\n\n\nThe echo: false option disables the printing of code (only output is displayed)."
  },
  {
    "objectID": "EDA.html",
    "href": "EDA.html",
    "title": "EDA",
    "section": "",
    "text": "Setups\nlibrary(tidyverse)\nlibrary(corrplot)"
  },
  {
    "objectID": "EDA.html#introduction",
    "href": "EDA.html#introduction",
    "title": "EDA",
    "section": "Introduction",
    "text": "Introduction\n\nAbout the Dataset\nThis dataset contains health indicators related to diabetes status.\nResponse variable:\nDiabetes_binary, indicating the presence or absence of diabetes. 1 for individuals diagnosed with diabetes and 0 for individuals without diabetes.\nPredictor Variables:\nRead in the dataset\n\ndiabetes &lt;- read_csv(\"diabetes_binary_health_indicators_BRFSS2015.csv\")\n\nRows: 253680 Columns: 22\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\ndbl (22): Diabetes_binary, HighBP, HighChol, CholCheck, BMI, Smoker, Stroke,...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nNotice that all the variables are numeric, but most of them (except BMI, MentHlth, PhysHlth, Age) are actually factors with different levels. We need to convert them to factors.\n\n# List of variables to remain numeric\nnumeric_vars &lt;- c(\"BMI\", \"MentHlth\", \"PhysHlth\", \"Age\")\n\n# Convert all other variables to factors\ndiabetes &lt;- diabetes |&gt;\n  mutate(across(-all_of(numeric_vars), as.factor))\n\n# Verify the conversions\nstr(diabetes)\n\ntibble [253,680 × 22] (S3: tbl_df/tbl/data.frame)\n $ Diabetes_binary     : Factor w/ 2 levels \"0\",\"1\": 1 1 1 1 1 1 1 1 2 1 ...\n $ HighBP              : Factor w/ 2 levels \"0\",\"1\": 2 1 2 2 2 2 2 2 2 1 ...\n $ HighChol            : Factor w/ 2 levels \"0\",\"1\": 2 1 2 1 2 2 1 2 2 1 ...\n $ CholCheck           : Factor w/ 2 levels \"0\",\"1\": 2 1 2 2 2 2 2 2 2 2 ...\n $ BMI                 : num [1:253680] 40 25 28 27 24 25 30 25 30 24 ...\n $ Smoker              : Factor w/ 2 levels \"0\",\"1\": 2 2 1 1 1 2 2 2 2 1 ...\n $ Stroke              : Factor w/ 2 levels \"0\",\"1\": 1 1 1 1 1 1 1 1 1 1 ...\n $ HeartDiseaseorAttack: Factor w/ 2 levels \"0\",\"1\": 1 1 1 1 1 1 1 1 2 1 ...\n $ PhysActivity        : Factor w/ 2 levels \"0\",\"1\": 1 2 1 2 2 2 1 2 1 1 ...\n $ Fruits              : Factor w/ 2 levels \"0\",\"1\": 1 1 2 2 2 2 1 1 2 1 ...\n $ Veggies             : Factor w/ 2 levels \"0\",\"1\": 2 1 1 2 2 2 1 2 2 2 ...\n $ HvyAlcoholConsump   : Factor w/ 2 levels \"0\",\"1\": 1 1 1 1 1 1 1 1 1 1 ...\n $ AnyHealthcare       : Factor w/ 2 levels \"0\",\"1\": 2 1 2 2 2 2 2 2 2 2 ...\n $ NoDocbcCost         : Factor w/ 2 levels \"0\",\"1\": 1 2 2 1 1 1 1 1 1 1 ...\n $ GenHlth             : Factor w/ 5 levels \"1\",\"2\",\"3\",\"4\",..: 5 3 5 2 2 2 3 3 5 2 ...\n $ MentHlth            : num [1:253680] 18 0 30 0 3 0 0 0 30 0 ...\n $ PhysHlth            : num [1:253680] 15 0 30 0 0 2 14 0 30 0 ...\n $ DiffWalk            : Factor w/ 2 levels \"0\",\"1\": 2 1 2 1 1 1 1 2 2 1 ...\n $ Sex                 : Factor w/ 2 levels \"0\",\"1\": 1 1 1 1 1 2 1 1 1 2 ...\n $ Age                 : num [1:253680] 9 7 9 11 11 10 9 11 9 8 ...\n $ Education           : Factor w/ 6 levels \"1\",\"2\",\"3\",\"4\",..: 4 6 4 3 5 6 6 4 5 4 ...\n $ Income              : Factor w/ 8 levels \"1\",\"2\",\"3\",\"4\",..: 3 1 8 6 4 8 7 4 1 3 ...\n\n\nCheck on missing values in the dataset\n\nsum(is.na(diabetes))\n\n[1] 0\n\n\nData set does not contain any missing values.\n\n\nSummaries\n\n# Summary statistics for BMI, MentHlth and PhysHlth variables\nsummary(diabetes %&gt;% select(BMI, MentHlth,PhysHlth))\n\n      BMI           MentHlth         PhysHlth     \n Min.   :12.00   Min.   : 0.000   Min.   : 0.000  \n 1st Qu.:24.00   1st Qu.: 0.000   1st Qu.: 0.000  \n Median :27.00   Median : 0.000   Median : 0.000  \n Mean   :28.38   Mean   : 3.185   Mean   : 4.242  \n 3rd Qu.:31.00   3rd Qu.: 2.000   3rd Qu.: 3.000  \n Max.   :98.00   Max.   :30.000   Max.   :30.000  \n\n\nFrom the output above, the min BMI is 12 but the Max is 98. The number of days in the past 30days has mental health not good (MentHlth) vary from 0 as min to 30 as max. Same as PhysHlth which stands for number of days of physical health not good in the past 30 days.\nLet’s calculate and plot the correlation between the numerical variables.\n\nm &lt;- cor(select(diabetes, c('BMI','MentHlth','PhysHlth')))\ncorrplot(m,method='color',\n         order='alphabet',\n         diag=FALSE,\n         col=COL2('PiYG'))\n\n\n\n\n\n\n\n\nIt seems PhysHlth and MentHlth are moderately linear correlated, and also PhysHlth has some positive linear correlation with BMI.\nNow, let’s see Diabetes_binary in the context of BMI ggplot()\n\n# Create a box plot\nggplot(diabetes, aes(x = Diabetes_binary, y = BMI, fill=Sex)) +\n  geom_boxplot() +\n  labs(x = \"Diabetes_binary\", y = \"BMI\", title = \"Box Plot of BMI by Diabetes Status\") +\n  theme_minimal()\n\n\n\n\n\n\n\n\nAs shown in the above boxplot, BMI does not vary between different Diabetes_binary.\nLet’s see Diabetes_binary with highBP and highChol\n\n# Create a bar plot for Diabetes_binary and HighBP\nggplot(diabetes, aes(x = Diabetes_binary, fill = HighBP)) +\n  geom_bar(position = \"fill\") +\n  labs(x = \"Diabetes_binary)\", fill = \"High BP\", y = \"Proportion\", title = \"Proportion of High BP by Diabetes Status\") +\n  theme_minimal()\n\n\n\n\n\n\n\n# Create a bar plot for Diabetes_binary and HighChol\nggplot(diabetes, aes(x = Diabetes_binary, fill = HighChol)) +\n  geom_bar(position = \"fill\") +\n  labs(x = \"Diabetes (binary)\", fill = \"High Cholesterol\", y = \"Proportion\", title = \"Proportion of High Cholesterol by Diabetes Status\") +\n  theme_minimal()\n\n\n\n\n\n\n\n\nFrom the graphs plotted above, both with high HighChol and HighBP have a higher proportion of diabetes."
  },
  {
    "objectID": "EDA.html#click-here-for-the-modeling-page",
    "href": "EDA.html#click-here-for-the-modeling-page",
    "title": "EDA",
    "section": "Click here for the Modeling Page",
    "text": "Click here for the Modeling Page"
  }
]